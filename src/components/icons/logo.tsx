import React from 'react'
import styled from 'styled-components'

// Styles
import mediaQueries from '../../styles/mediaQueries'
import { white, yellow, dark } from '../../styles/colors'
import { jump, lineExtension } from '../../styles/animations'

// Types
import { IBaseIcon, Iteration } from '../../types/entities'

interface IIconProps extends IBaseIcon {
  inverse?: boolean
  payoff?: boolean
  isScrolled?: boolean
  footer?: boolean
  iteration?: Iteration
}

const Logo = ({
  width,
  height,
  className,
  inverse,
  payoff,
  isScrolled,
  footer,
  iteration = 'forwards',
}: IIconProps) => (
  <Svg
    width={width}
    height={height}
    className={className}
    xmlns="http://www.w3.org/2000/svg"
    viewBox={`0 -24 291 152`}
    preserveAspectRatio="xMidYMid meet"
    isScrolled={isScrolled}
    footer={footer}
  >
    <Container inverse={inverse} fillRule="evenodd">
      <Dot
        d="M155.756 9.687c2.677 0 4.773-2.185 4.773-4.784 0-2.717-2.096-4.903-4.773-4.903-2.62 0-4.773 2.186-4.773 4.903 0 2.599 2.154 4.784 4.773 4.784"
        inverse={inverse}
        iteration={iteration}
      />
      <Line
        d="M159.642 17.444h-7.714v29.484h-.018c.001.158.006.315.006.472 0 19.363-7.5 37.568-21.118 51.26-13.618 13.691-31.725 21.232-50.984 21.232-19.26 0-37.366-7.54-50.984-21.233C16.938 86.704 9.713 71.307 8.072 54.702H.324c1.665 18.68 9.698 36.021 23.05 49.444 15.075 15.157 35.12 23.505 56.44 23.505s41.365-8.348 56.44-23.505c15.077-15.157 23.38-35.31 23.38-56.746 0-.157-.005-.314-.006-.472h.014V17.444z"
        inverse={inverse}
      />
      <LineExtension
        d="M151.928 17.444h7.714v15.421h-7.714z"
        inverse={inverse}
        iteration={iteration}
      />
      {payoff && (
        <Payoff
          inverse={inverse}
          d="M170.126 69.124h6.617v2.04h-9.383V69.33l6.596-10.442h-6.596V56.85h9.383v1.833zM186.207 56.767l-4.527 2.245v-1.73l4.527-2.513v1.998zm1.004 7.703c-.014-.865-.321-1.559-.922-2.08-.601-.522-1.346-.783-2.233-.783-.806 0-1.496.257-2.07.772-.573.515-.914 1.212-1.024 2.09h6.249zm2.355 1.895h-8.624c.068.906.403 1.634 1.004 2.183.6.55 1.338.823 2.212.823 1.257 0 2.144-.528 2.664-1.585h2.519a5.112 5.112 0 01-1.854 2.564c-.894.666-2.004.999-3.329.999-1.079 0-2.045-.244-2.898-.731a5.182 5.182 0 01-2.008-2.06c-.485-.886-.727-1.912-.727-3.079 0-1.167.235-2.193.706-3.08a4.985 4.985 0 011.988-2.048c.853-.481 1.833-.721 2.94-.721 1.064 0 2.014.233 2.847.7a4.94 4.94 0 011.946 1.967c.464.844.696 1.816.696 2.914 0 .426-.027.81-.082 1.154zM196.408 65.5l5.204 5.664h-3.155l-4.179-4.882v4.882h-2.335V55.922h2.335v8.857l4.097-4.964h3.237zM211.199 64.47c-.014-.865-.322-1.559-.922-2.08-.601-.522-1.346-.783-2.233-.783-.806 0-1.496.257-2.07.772-.573.515-.914 1.212-1.024 2.09h6.249zm2.355 1.895h-8.624c.068.906.403 1.634 1.004 2.183.6.55 1.338.823 2.212.823 1.257 0 2.144-.528 2.664-1.585h2.519a5.112 5.112 0 01-1.854 2.564c-.895.666-2.004.999-3.329.999-1.079 0-2.045-.244-2.898-.731a5.183 5.183 0 01-2.008-2.06c-.485-.886-.727-1.912-.727-3.079 0-1.167.235-2.193.706-3.08a4.986 4.986 0 011.988-2.049c.853-.48 1.833-.72 2.94-.72 1.064 0 2.014.233 2.847.7a4.94 4.94 0 011.946 1.967c.464.844.696 1.816.696 2.914 0 .426-.027.81-.082 1.154zM219.628 60.114c.567-.323 1.24-.484 2.018-.484v2.43h-.594c-.915 0-1.608.233-2.08.7-.47.467-.706 1.277-.706 2.43v5.973h-2.336V59.815h2.336v1.648a3.674 3.674 0 011.362-1.35M233.486 69.063l3.196-9.248h2.479l-4.302 11.349h-2.786l-4.282-11.35h2.5zM247.508 68.877c.526-.288.953-.72 1.28-1.297.328-.577.492-1.277.492-2.101 0-.824-.157-1.52-.47-2.09-.315-.57-.732-1-1.25-1.288a3.403 3.403 0 00-1.68-.432c-.601 0-1.158.144-1.67.432-.512.289-.918.718-1.219 1.287-.3.57-.45 1.267-.45 2.09 0 1.223.31 2.167.932 2.833.621.666 1.403.999 2.345.999a3.46 3.46 0 001.69-.433m-4.578 1.74a5.236 5.236 0 01-2.028-2.059c-.492-.886-.738-1.912-.738-3.08 0-1.153.253-2.175.758-3.068a5.25 5.25 0 012.07-2.06c.873-.48 1.85-.72 2.929-.72 1.078 0 2.055.24 2.93.72a5.253 5.253 0 012.068 2.06c.505.893.758 1.915.758 3.069 0 1.153-.26 2.176-.778 3.069a5.405 5.405 0 01-2.12 2.07c-.895.487-1.882.73-2.96.73-1.066 0-2.029-.243-2.89-.73M260.578 68.877c.525-.288.952-.72 1.28-1.297.328-.577.492-1.277.492-2.101 0-.824-.157-1.52-.472-2.09-.314-.57-.73-1-1.25-1.288a3.403 3.403 0 00-1.68-.432c-.6 0-1.156.144-1.669.432-.512.289-.918.718-1.218 1.287-.301.57-.451 1.267-.451 2.09 0 1.223.31 2.167.932 2.833.621.666 1.403.999 2.345.999a3.46 3.46 0 001.69-.433M256 70.617a5.236 5.236 0 01-2.028-2.059c-.492-.886-.737-1.912-.737-3.08 0-1.153.252-2.175.758-3.068a5.25 5.25 0 012.069-2.06c.873-.48 1.85-.72 2.93-.72 1.078 0 2.054.24 2.928.72a5.253 5.253 0 012.07 2.06c.505.893.758 1.915.758 3.069 0 1.153-.26 2.176-.779 3.069a5.405 5.405 0 01-2.12 2.07c-.895.487-1.882.73-2.96.73-1.066 0-2.028-.243-2.889-.73M270.759 60.114c.566-.323 1.239-.484 2.017-.484v2.43h-.593c-.916 0-1.609.233-2.08.7-.47.467-.706 1.277-.706 2.43v5.973h-2.336V59.815h2.336v1.648a3.674 3.674 0 011.362-1.35M290.476 59.815v11.349h-2.336v-1.34c-.368.468-.85.835-1.444 1.102a4.556 4.556 0 01-1.895.402c-.888 0-1.683-.185-2.387-.556a4.004 4.004 0 01-1.659-1.648c-.403-.727-.604-1.606-.604-2.636v-6.673h2.315v6.323c0 1.016.252 1.795.758 2.337.505.543 1.195.814 2.069.814.874 0 1.567-.27 2.079-.814.512-.542.768-1.32.768-2.337v-6.323h2.336z"
        />
      )}
      <Text
        d="M120.994 33.655c0 2.246-.56 3.992-1.668 5.188-1.102 1.193-2.65 1.798-4.602 1.798-1.915 0-3.446-.605-4.549-1.798-1.107-1.196-1.668-2.942-1.668-5.188V17.443h-7.715v17.262c0 2.612.509 4.895 1.512 6.788 1.006 1.9 2.412 3.357 4.179 4.334 1.761.974 3.814 1.468 6.101 1.468 1.796 0 3.485-.368 5.02-1.095 1.348-.638 2.486-1.5 3.39-2.568v3.296h7.767V17.443h-7.767v16.212zM136.48 46.928h7.715V1.963h-7.715zM192.102 20.365c-2.154-2.217-5.013-3.341-8.498-3.341-1.83 0-3.536.368-5.072 1.095-1.355.642-2.51 1.51-3.442 2.582v-3.258h-7.715v29.485h7.715V30.664c0-2.245.57-3.99 1.693-5.187 1.12-1.194 2.678-1.8 4.629-1.8 1.915 0 3.446.605 4.549 1.799 1.107 1.197 1.668 2.943 1.668 5.188v16.264h7.715V29.667c0-3.955-1.09-7.085-3.242-9.302zM89.909 31c-1.363-.562-3.111-1.113-5.195-1.636-2.03-.52-3.544-1.035-4.498-1.532-.91-.473-1.352-1.143-1.352-2.05 0-.81.32-1.424.981-1.878.676-.463 1.665-.699 2.94-.699 1.373 0 2.48.33 3.292.98.804.642 1.261 1.522 1.36 2.613l.017.186h.054l7.07-2.006c-.481-2.168-1.554-3.967-3.206-5.361-2.082-1.756-4.9-2.646-8.379-2.646-2.348 0-4.422.394-6.164 1.173-1.75.782-3.113 1.865-4.051 3.218a7.802 7.802 0 00-1.42 4.526c0 2 .517 3.617 1.537 4.804a9.428 9.428 0 003.627 2.628c1.377.56 3.169 1.11 5.323 1.635 2.065.554 3.59 1.07 4.53 1.534.89.44 1.322 1.075 1.322 1.942 0 .813-.356 1.462-1.089 1.986-.744.532-1.802.802-3.145.802-1.375 0-2.536-.357-3.452-1.06-.908-.697-1.435-1.587-1.567-2.645l-.019-.156-7.427 2.107a9.267 9.267 0 001.523 3.078c1.112 1.49 2.64 2.686 4.542 3.553 1.898.866 4.068 1.304 6.452 1.304 2.314 0 4.37-.385 6.11-1.145 1.75-.764 3.114-1.838 4.054-3.193.942-1.359 1.42-2.917 1.42-4.634-.036-1.964-.57-3.57-1.589-4.774-1.008-1.191-2.22-2.084-3.601-2.654M23.864 1.9h-9.817C5.003 15.056.093 30.61 0 46.929h7.717c.085-13.454 3.796-26.332 10.66-37.51l7.322 20.2h-9.92a67.1 67.1 0 00-1.63 7.757H28.51l3.463 9.553h8.21L23.865 1.901z"
        inverse={inverse}
      />
      <Text
        d="M62.014 31c-1.363-.562-3.111-1.113-5.196-1.636-2.03-.52-3.543-1.035-4.498-1.532-.91-.473-1.352-1.143-1.352-2.05 0-.81.321-1.424.982-1.878.675-.463 1.664-.699 2.94-.699 1.372 0 2.48.33 3.292.98.803.642 1.261 1.522 1.36 2.613l.017.186h.054l7.07-2.006c-.482-2.168-1.554-3.967-3.206-5.361-2.082-1.756-4.901-2.646-8.38-2.646-2.348 0-4.421.394-6.163 1.173-1.75.782-3.113 1.865-4.052 3.218a7.802 7.802 0 00-1.42 4.526c0 2 .518 3.617 1.538 4.804a9.428 9.428 0 003.627 2.628c1.376.56 3.168 1.11 5.322 1.635 2.066.554 3.59 1.07 4.53 1.534.89.44 1.323 1.075 1.323 1.942 0 .813-.356 1.462-1.09 1.986-.743.532-1.802.802-3.144.802-1.375 0-2.537-.357-3.453-1.06-.908-.697-1.435-1.587-1.566-2.645l-.02-.156-7.426 2.107a9.267 9.267 0 001.523 3.078c1.112 1.49 2.64 2.686 4.542 3.553 1.897.866 4.068 1.304 6.452 1.304 2.313 0 4.37-.385 6.11-1.145 1.75-.764 3.114-1.838 4.053-3.193.942-1.359 1.42-2.917 1.42-4.634-.036-1.964-.57-3.57-1.588-4.774-1.009-1.191-2.22-2.084-3.601-2.654M209.433 29.252c.296-1.79 1.024-3.215 2.168-4.235 1.191-1.063 2.683-1.602 4.433-1.602 1.854 0 3.443.558 4.723 1.657 1.221 1.05 1.88 2.456 1.958 4.18h-13.282zm19.438-5.326a12.79 12.79 0 00-5.145-5.146c-2.196-1.2-4.714-1.809-7.483-1.809-2.875 0-5.455.627-7.668 1.863-2.217 1.239-3.966 3.032-5.196 5.33-1.228 2.294-1.851 4.992-1.851 8.022 0 2.995.631 5.677 1.878 7.97 1.248 2.299 3.013 4.1 5.247 5.355 2.23 1.254 4.783 1.89 7.59 1.89 3.475 0 6.45-.924 8.84-2.745 1.86-1.417 3.454-3.487 4.472-5.753l-7.26-2.06h-.02l-.045.141c-.735 2.271-3.475 3.92-6.144 3.92-1.818 0-3.37-.583-4.613-1.73-1.197-1.106-1.906-2.646-2.107-4.58h21.091l.029-.17c.14-.85.211-1.815.211-2.868 0-2.856-.614-5.423-1.826-7.63z"
        inverse={inverse}
      />
    </Container>
  </Svg>
)

export default Logo

const Svg = styled.svg<IIconProps>`
  width: ${({ width }) => width}px;
  height: ${({ height }) => height}px;
  ${({ inverse }) => inverse && 'margin-bottom: 32px;'}
  transition: width 0.2s ease, height 0.2s ease;

  ${mediaQueries.from.breakpoint.S`
      width: ${(props: { footer: boolean }) =>
        props.footer ? '200px' : '236px'};
      height: ${(props: { footer: boolean }) =>
        props.footer ? '112px' : '128px'};
  `}

  ${mediaQueries.from.breakpoint.M`
    ${(props: { isScrolled: boolean }) => props.isScrolled && 'width: 219px;'}
    ${(props: { isScrolled: boolean }) => props.isScrolled && 'height: 96px;'}
  `}

  ${mediaQueries.from.breakpoint.L`
      width: ${(props: { isScrolled: boolean; footer: boolean }) =>
        props.footer ? '200px' : props.isScrolled ? '219px' : '236px'};
      height: ${(props: { isScrolled: boolean; footer: boolean }) =>
        props.footer ? '112px' : props.isScrolled ? '96px' : '128px'};
  `}

  ${mediaQueries.from.breakpoint.XL`
      width: ${(props: { isScrolled: boolean; footer: boolean }) =>
        props.footer ? '200px' : props.isScrolled ? '219px' : '291px'};
      height: ${(props: { isScrolled: boolean; footer: boolean }) =>
        props.footer ? '112px' : props.isScrolled ? '96px' : '160px'};
  `}
`

const Container = styled.g<{ inverse?: boolean }>`
  fill: ${props => props.inverse && white};
`
const Line = styled.path<{ inverse?: boolean }>`
  fill: ${props => (props.inverse ? white : yellow)};
`

const Dot = styled(Line)<{ iteration: Iteration }>`
  ${({ iteration }) => jump(iteration)}
`

const LineExtension = styled(Line)<{ iteration: Iteration }>`
  ${({ iteration }) => lineExtension(iteration)}
`

const Payoff = styled.path<{ inverse?: boolean }>`
  fill: ${props => (props.inverse ? white : dark)};
`

const Text = styled.path<{ inverse?: boolean }>`
  fill: ${props => (props.inverse ? white : dark)};
`
